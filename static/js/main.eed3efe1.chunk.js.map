{"version":3,"sources":["components/NavBar.js","pages/Home.js","components/Modal.js","pages/Portfolio.js","pages/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","history","useHistory","Navbar","expand","fixed","variant","Brand","Toggle","Collapse","id","Nav","className","Link","onClick","push","href","target","GithubOutlined","style","color","fontSize","cursor","LinkedinOutlined","Home","params","fpsLimit","backgroundMode","enable","zIndex","particles","number","value","density","area","animation","speed","sync","stroke","width","size","random","minimumValue","links","distance","opacity","move","direction","straight","outMode","attract","rotateX","rotateY","interactivity","detectsOn","events","onHover","mode","resize","modes","grab","bubble","duration","repulse","detectRetina","background","left","right","textAlign","position","top","transform","fontFamily","height","backgroundColor","ModalProject","project","useState","show","setShow","Button","name","Modal","onHide","centered","Header","closeButton","Body","img","map","process","Portfolio","projects","datas","minHeight","Container","Row","paddingTop","Col","Contact","email","message","form","setForm","loading","setLoading","validated","setValidated","messageSent","setMessageSent","handleChange","e","lg","Form","noValidate","onSubmit","form1","currentTarget","checkValidity","preventDefault","stopPropagation","console","log","Group","controlId","Label","InputGroup","hasValidation","Control","type","onChange","maxLength","required","Feedback","placeholder","as","rows","disabled","Spinner","role","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eed3efe1.chunk.js","sourcesContent":["import { Nav, Navbar } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { GithubOutlined, LinkedinOutlined } from '@ant-design/icons';\n\nconst NavBar = () => {\n  const history = useHistory();\n\n  return (\n    <Navbar expand=\"lg\" fixed=\"top\" variant=\"dark\">\n      <Navbar.Brand>SL</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto text-white\">\n          <Nav.Link className=\"text-white\" onClick={() => history.push('/')}>\n            Home\n          </Nav.Link>\n          <Nav.Link\n            className=\"text-white\"\n            onClick={() => history.push('/works')}\n          >\n            Portfolio\n          </Nav.Link>\n          <Nav.Link\n            className=\"text-white\"\n            onClick={() => history.push('/contact')}\n          >\n            Contact\n          </Nav.Link>\n        </Nav>\n        <Nav.Link\n          className=\"justify-content-end\"\n          href=\"https://github.com/samReact\"\n          target=\"_blank\"\n        >\n          <GithubOutlined\n            style={{ color: '#39bb88', fontSize: 28, cursor: 'pointer' }}\n          />\n        </Nav.Link>\n        <Nav.Link\n          className=\"justify-content-end\"\n          href=\"https://www.linkedin.com/in/samirlehmil/\"\n          target=\"_blank\"\n        >\n          <LinkedinOutlined\n            style={{ color: '#39bb88', fontSize: 28, cursor: 'pointer' }}\n          />\n        </Nav.Link>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import Particles from 'react-particles-js';\n\nconst Home = () => (\n  <>\n    <Particles\n      params={{\n        fpsLimit: 60,\n        backgroundMode: {\n          enable: true,\n          zIndex: 0,\n        },\n        particles: {\n          number: {\n            value: 180,\n            density: {\n              enable: true,\n              area: 800,\n            },\n          },\n          color: {\n            value: '#ff0000',\n            animation: {\n              enable: true,\n              speed: 10,\n              sync: true,\n            },\n          },\n          stroke: {\n            width: 1,\n          },\n          size: {\n            value: 2,\n            random: true,\n            animation: {\n              enable: false,\n              speed: 5,\n              minimumValue: 0.1,\n              sync: false,\n            },\n          },\n          links: {\n            enable: true,\n            distance: 100,\n            color: '#ffffff',\n            opacity: 0.2,\n            width: 3,\n          },\n          move: {\n            enable: true,\n            speed: 1,\n            direction: 'none',\n            random: false,\n            straight: false,\n            outMode: 'out',\n            attract: {\n              enable: false,\n              rotateX: 600,\n              rotateY: 1200,\n            },\n          },\n        },\n        interactivity: {\n          detectsOn: 'window',\n          events: {\n            onHover: {\n              enable: true,\n              mode: 'repulse',\n            },\n            resize: true,\n          },\n          modes: {\n            grab: {\n              distance: 200,\n              links: {\n                opacity: 0.6,\n              },\n            },\n            bubble: {\n              distance: 400,\n              size: 2,\n              duration: 2,\n              opacity: 0.2,\n            },\n            repulse: {\n              distance: 100,\n            },\n          },\n        },\n        detectRetina: true,\n        background: {\n          size: 'cover',\n        },\n      }}\n    />\n    <div>\n      <div\n        style={{\n          left: 0,\n          right: 0,\n          textAlign: 'center ',\n          position: 'absolute',\n          top: '50%',\n          transform: 'translateY(-50%)',\n        }}\n      >\n        <h1\n          style={{\n            color: 'rgba(255,255,255,1)',\n            fontFamily: 'MyFont',\n          }}\n        >\n          Hi I'm Samir\n        </h1>\n        <hr\n          style={{\n            width: '200px',\n            height: '1px',\n            backgroundColor: '#39bb88',\n          }}\n        />\n        <h1\n          style={{\n            color: 'rgba(255,255,255,1)',\n            fontFamily: 'MyFont',\n          }}\n        >\n          {'<'} FrontEnd Developer {'/>'}\n        </h1>\n      </div>\n    </div>\n  </>\n);\n\nexport default Home;\n","import { useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport AwesomeSlider from 'react-awesome-slider';\n\nconst ModalProject = ({ project }) => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        {project.name}\n      </Button>\n\n      <Modal show={show} onHide={handleClose} centered size=\"lg\">\n        <Modal.Header closeButton></Modal.Header>\n        <Modal.Body>\n          <AwesomeSlider animation=\"cubeAnimation\">\n            {project.img.map((img) => {\n              return (\n                <div data-src={`${process.env.PUBLIC_URL}/img/${img}.jpg`} />\n              );\n            })}\n          </AwesomeSlider>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalProject;\n","import { Container, Row, Col } from 'react-bootstrap';\nimport ModalProject from '../components/Modal';\n\nimport datas from '../utils/project.json';\n\nconst Portfolio = () => {\n  const { projects } = datas;\n  return (\n    <div style={{ minHeight: '100vh' }}>\n      <Container>\n        <Row style={{ paddingTop: '200px' }}>\n          {projects.map((project) => {\n            return (\n              <Col>\n                <ModalProject project={project} key={project.id} />;\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Portfolio;\n","import { useState } from 'react';\nimport {\n  Button,\n  Col,\n  Container,\n  Form,\n  InputGroup,\n  Row,\n  Spinner,\n} from 'react-bootstrap';\n\nconst Contact = () => {\n  const [form, setForm] = useState({ name: '', email: '', message: '' });\n  const [loading, setLoading] = useState(false);\n  const [validated, setValidated] = useState(false);\n  const [messageSent, setMessageSent] = useState(false);\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.id]: e.target.value });\n  };\n  const handleSubmit = (e) => {\n    const form1 = e.currentTarget;\n    if (form1.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n      setValidated(true);\n    } else if (form1.checkValidity() === true) {\n      console.log(form);\n      e.preventDefault();\n      setLoading(true);\n      setMessageSent(true);\n    }\n  };\n  return (\n    <div style={{ height: '100vh', backgroundColor: '#000' }}>\n      <Container\n        style={{\n          left: 0,\n          right: 0,\n          position: 'absolute',\n          top: '50%',\n          transform: 'translateY(-50%)',\n        }}\n      >\n        <Row className=\"justify-content-center\">\n          <Col lg={6}>\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\n              <Form.Group className=\"mb-3\" controlId=\"name\">\n                <Form.Label className=\"text-white\">Name</Form.Label>\n                <InputGroup hasValidation>\n                  <Form.Control\n                    type=\"text\"\n                    aria-describedby=\"name\"\n                    value={form.name}\n                    onChange={handleChange}\n                    maxLength=\"15\"\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter your name.\n                  </Form.Control.Feedback>\n                </InputGroup>\n              </Form.Group>\n              <Form.Group className=\"mb-3\" controlId=\"email\">\n                <Form.Label className=\"text-white\">Email address</Form.Label>\n                <InputGroup hasValidation>\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"name@example.com\"\n                    aria-describedby=\"email\"\n                    value={form.email}\n                    onChange={handleChange}\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter your email.\n                  </Form.Control.Feedback>\n                </InputGroup>\n              </Form.Group>\n              <Form.Group className=\"mb-3\" controlId=\"message\">\n                <Form.Label className=\"text-white\">Your message</Form.Label>\n                <InputGroup hasValidation>\n                  <Form.Control\n                    type=\"text\"\n                    aria-describedby=\"message\"\n                    as=\"textarea\"\n                    rows={3}\n                    maxLength=\"200\"\n                    value={form.message}\n                    onChange={handleChange}\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter a message.\n                  </Form.Control.Feedback>\n                </InputGroup>\n              </Form.Group>\n              {loading ? (\n                <Button variant=\"primary\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"grow\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />{' '}\n                  Sending...\n                </Button>\n              ) : (\n                <Button variant=\"primary\" type=\"submit\" disabled>\n                  Submit\n                </Button>\n              )}\n            </Form>\n            {messageSent && (\n              <p className=\"text-white\">Your message has been sent !</p>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Contact;\n","import NavBar from './components/NavBar';\nimport Home from './pages/Home';\nimport Portfolio from './pages/Portfolio';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Contact from './pages/Contact';\n\nfunction App() {\n  return (\n    <Router basename=\"/portfolio\">\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/works\">\n          <Portfolio />\n        </Route>\n        <Route path=\"/contact\">\n          <Contact />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './sass/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}